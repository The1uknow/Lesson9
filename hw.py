class Character:
    def __init__(self, name, hp, dmg):
        self.name = name
        self.hp = hp
        self.dmg = dmg

    def is_alife(self):
        return self.hp > 0

    def attack(self, enemy):
        enemy.hp -= self.dmg
        return f"{self.name} –∞—Ç–∞–∫—É–µ—Ç {enemy.name} –∏ –Ω–∞–Ω–æ—Å–∏—Ç {self.dmg} —É—Ä–æ–Ω–∞"

    def get_status(self):
        return f"{self.name}: {self.hp} HP"


class Game:
    def __init__(self, user_name):
        self.player = Character(user_name, 100, 18)
        self.enemy = Character("–ó–æ–º–±–∏", 80, 20)

    def player_turn(self):
        return self.player.attack(self.enemy)

    def enemy_turn(self):
        return self.enemy.attack(self.player)

    def is_over(self):
        return not (self.player.is_alife() and self.enemy.is_alife())

    def get_res(self):
        if self.player.is_alife():
            return "—Ç—ã –µ–≥–æ –∑–∞–º–æ—á–∏–ª"
        else:
            return "–æ–Ω –∑–∞–º–æ—á–∏–ª —Ç–µ–±—è"

    def get_status(self):
        return f"{self.player.get_status()} | {self.enemy.get_status()}"




def info():
    name = input("–≤–≤–µ–¥–∏ —Å–≤–æ–µ –∏–º—è –≤–æ–∏–Ω: ")
    game = Game(name)

    print("‚öîÔ∏è–±–∏—Ç–≤–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è")
    while not game.is_over():
        input("\n–ö–ª–∏–∫–Ω–∏ –ø–æ Enter –¥–ª—è –∞—Ç–∞–∫–∏: ")
        print(game.player_turn())
        if game.enemy.is_alife():
            print(game.enemy_turn())
        print(game.get_status())
    print("\nüí• " + game.get_res())

if __name__ == "__main__":
    info()
